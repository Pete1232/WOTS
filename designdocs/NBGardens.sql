-- MySQL Script generated by MySQL Workbench
-- 11/12/15 09:19:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema NBGardens
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema NBGardens
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NBGardens` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `NBGardens` ;

-- -----------------------------------------------------
-- Table `NBGardens`.`Supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`Supplier` (
  `SupplierId` INT NOT NULL COMMENT '',
  `SupplierName` VARCHAR(45) NULL COMMENT '',
  `Email` VARCHAR(45) NULL COMMENT '',
  `Phone` INT NULL COMMENT '',
  `PreferredContactMethod` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`SupplierId`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`ProductSupplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`ProductSupplier` (
  `ProductId` INT NOT NULL COMMENT '',
  `Price` DECIMAL(7,2) NULL COMMENT '',
  `Supplier_SupplierId` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ProductId`, `Supplier_SupplierId`)  COMMENT '',
  INDEX `fk_ProductSupplier_Supplier1_idx` (`Supplier_SupplierId` ASC)  COMMENT '',
  CONSTRAINT `fk_ProductSupplier_Supplier1`
    FOREIGN KEY (`Supplier_SupplierId`)
    REFERENCES `NBGardens`.`Supplier` (`SupplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`Employee` (
  `EmployeeId` INT NOT NULL COMMENT '',
  `EmployeeName` VARCHAR(45) NULL COMMENT '',
  `EmployeeUsername` VARCHAR(45) NULL COMMENT '',
  `EmployeePassword` VARCHAR(45) NULL COMMENT '',
  `AccessLevel` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`EmployeeId`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`PurchaseOrder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`PurchaseOrder` (
  `PurchaseOrderId` INT NOT NULL COMMENT '',
  `Supplier_SupplierId` INT NOT NULL COMMENT '',
  `Employee_EmployeeId` INT NOT NULL COMMENT '',
  PRIMARY KEY (`PurchaseOrderId`)  COMMENT '',
  INDEX `fk_PurchaseOrder_Supplier_idx` (`Supplier_SupplierId` ASC)  COMMENT '',
  INDEX `fk_PurchaseOrder_Employee1_idx` (`Employee_EmployeeId` ASC)  COMMENT '',
  CONSTRAINT `fk_PurchaseOrder_Supplier`
    FOREIGN KEY (`Supplier_SupplierId`)
    REFERENCES `NBGardens`.`Supplier` (`SupplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PurchaseOrder_Employee1`
    FOREIGN KEY (`Employee_EmployeeId`)
    REFERENCES `NBGardens`.`Employee` (`EmployeeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`CustomerOrder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`CustomerOrder` (
  `CustomerOrderId` INT NOT NULL COMMENT '',
  `CustomerId` INT NULL COMMENT '',
  `Date` DATE NULL COMMENT '',
  `OrderTotal` DECIMAL(7,2) NULL COMMENT '',
  `CustomerOrderStatus` VARCHAR(45) NULL COMMENT '',
  `AddressId` INT NULL COMMENT '',
  PRIMARY KEY (`CustomerOrderId`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`PurchaseOrderLine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`PurchaseOrderLine` (
  `ProductId` INT NULL COMMENT '',
  `Quantity` INT NULL COMMENT '',
  `PurchaseOrder_PurchaseOrderId` INT NOT NULL COMMENT '',
  PRIMARY KEY (`PurchaseOrder_PurchaseOrderId`)  COMMENT '',
  INDEX `fk_PurchaseOrderLine_PurchaseOrder1_idx` (`PurchaseOrder_PurchaseOrderId` ASC)  COMMENT '',
  CONSTRAINT `fk_PurchaseOrderLine_PurchaseOrder1`
    FOREIGN KEY (`PurchaseOrder_PurchaseOrderId`)
    REFERENCES `NBGardens`.`PurchaseOrder` (`PurchaseOrderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NBGardens`.`CustomerOrderLine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NBGardens`.`CustomerOrderLine` (
  `ProductId` INT NOT NULL COMMENT '',
  `Quantity` INT NULL COMMENT '',
  `CustomerOrder_CustomerOrderId` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ProductId`, `CustomerOrder_CustomerOrderId`)  COMMENT '',
  INDEX `fk_CustomerOrderLine_CustomerOrder1_idx` (`CustomerOrder_CustomerOrderId` ASC)  COMMENT '',
  CONSTRAINT `fk_CustomerOrderLine_CustomerOrder1`
    FOREIGN KEY (`CustomerOrder_CustomerOrderId`)
    REFERENCES `NBGardens`.`CustomerOrder` (`CustomerOrderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
